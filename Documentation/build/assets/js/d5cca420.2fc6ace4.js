"use strict";(self.webpackChunkeliza_docs=self.webpackChunkeliza_docs||[]).push([[86685],{35814:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Discord/development/coders/chat_2024-10-31","title":"\ud83d\udcbb-coders 2024-10-31","description":"Summary","source":"@site/community/Discord/development/coders/chat_2024-10-31.md","sourceDirName":"Discord/development/coders","slug":"/Discord/development/coders/chat_2024-10-31","permalink":"/eliza/community/Discord/development/coders/chat_2024-10-31","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"\ud83d\udcbb-coders 2024-10-30","permalink":"/eliza/community/Discord/development/coders/chat_2024-10-30"},"next":{"title":"\ud83d\udcbb-coders 2024-11-01","permalink":"/eliza/community/Discord/development/coders/chat_2024-11-01"}}');var t=i(62540),o=i(43023);const l={},r="\ud83d\udcbb-coders 2024-10-31",a={},c=[{value:"Summary",id:"summary",level:2},{value:"FAQ",id:"faq",level:2},{value:"Who Helped Who",id:"who-helped-who",level:2},{value:"Action Items",id:"action-items",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"-coders-2024-10-31",children:"\ud83d\udcbb-coders 2024-10-31"})}),"\n",(0,t.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,t.jsx)(n.p,{children:"In the technical discussions, Ophiuchus successfully cloned the eliza repository from GitHub and installed necessary dependencies including onnxruntime-node@1.19.0 for running local models with ollama instead of llama-cpp. The community considered using a smaller 1 billion parameter model to avoid overloading their hardware, as larger models like the 70 billion parameter one caused issues in the past. Ophiuchus mentioned less trouble with ollama and suggested setting up an environment variable for remote access to run pods efficiently. Big Dookie shared that they were using a llama2 7b model but planned to upgrade it, aiming to improve audiovisual input prompt responses by scraping relevant sentences from transcripts. The community acknowledged the innovative approach and agreed on starting with text replies before expanding into more complex functionalities."}),"\n",(0,t.jsx)(n.h2,{id:"faq",children:"FAQ"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"What is the process to install Eliza with CUDA support?"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Ophiuchus: To install Eliza with CUDA support, you need to clone the repository from GitHub using ",(0,t.jsx)(n.code,{children:"git clone https://github.com/ai16z/eliza.git"}),". Then navigate into the cloned directory and run ",(0,t.jsx)(n.code,{children:"npm install --include=optional sharp"})," followed by ",(0,t.jsx)(n.code,{children:"npm install onnxruntime-node@1.19.0"})," and finally, start Eliza with ",(0,t.jsx)(n.code,{children:"npm start"}),". This setup ensures that CUDA is utilized for GPU acceleration during the installation process."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Is there a significant advantage to using Ollama over Llama-cpp?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"ferric | stakeware.xyz: The main advantage of using Ollama instead of Llama-cpp seems to be better performance and compatibility, especially on M1 chips. It's also mentioned that running larger models like the 70b model might cause issues with an M1 chip freezing, suggesting a preference for smaller models or alternative solutions such as running them in runpod environments."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"How can I set up Ollama to use remote URLs and start it?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Ophiuchus: To set up Ollama using remote URLs, you should first ensure that your environment variable is correctly pointing to the desired URL by setting ",(0,t.jsx)(n.code,{children:"remote_ollama_url"})," in your configuration. Then, initiate Ollama with the command ",(0,t.jsx)(n.code,{children:"start ollama"}),". This setup allows you to use a remote version of Ollama for your projects or characters."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"What are some considerations when using larger models like Llama 7b?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"big dookie: When working with larger models such as Llama 2 7b, it's essential to evaluate the model's performance and compatibility with your current setup. For instance, you might need to adjust scraping techniques for transcript analysis or consider using audiovisual input prompts that can act as relevant responses based on a conversation. It's also crucial to manage scope creep by starting with text replies before moving onto more complex functionalities."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"who-helped-who",children:"Who Helped Who"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Ophiuchus helped stakeware.xyz with setting up a local model by suggesting to use ollama instead of llama-cpp and providing instructions on how to clone, install dependencies, and start it in runpod for better performance."}),"\n",(0,t.jsx)(n.li,{children:"Whobody encouraged big dookie's efforts in experimenting with different models (7b) for transcript scraping and audiovisual input prompt responses, acknowledging the potential scope creep but advising to focus on text replies first."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"action-items",children:"Action Items"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Technical Tasks"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Clone the eliza repository and install dependencies, including optional sharp package (mentioned by Ophiuchus)"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Install onnxruntime-node@1.19.0 (mentioned by Ophiuchus)"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Update README for installation instructions using ollama instead of llama-cpp (mentioned by Ophiuchus)"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Experiment with running models in runpod and setting remote ollama URL environment variable (suggested by Ophiuchus)"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Documentation Needs"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Update the README file to reflect changes for installing using ollama instead of llama-cpp (requested by Ophiuchus)"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Feature Requests"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Explore running audiovisual input prompt as a response in transcript scraping with larger models like 7b or higher (suggested by big dookie)"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Community Tasks"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Share experiences and progress on using ollama for local model implementations within the community (led by Ophiuchus, whobody, and big dookie)"}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},43023:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>r});var s=i(63696);const t={},o=s.createContext(t);function l(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);