"use strict";(self.webpackChunkeliza_docs=self.webpackChunkeliza_docs||[]).push([[13571],{86476:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"Discord/development/dev-contributors/chat_2024-11-20","title":"dev-contributors 2024-11-20","description":"Summary","source":"@site/community/Discord/development/dev-contributors/chat_2024-11-20.md","sourceDirName":"Discord/development/dev-contributors","slug":"/Discord/development/dev-contributors/chat_2024-11-20","permalink":"/eliza/community/Discord/development/dev-contributors/chat_2024-11-20","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"\ud83d\udcbb-coders 2024-11-26","permalink":"/eliza/community/Discord/development/coders/chat_2024-11-26"},"next":{"title":"dev-contributors 2024-11-21","permalink":"/eliza/community/Discord/development/dev-contributors/chat_2024-11-21"}}');var s=n(62540),r=n(43023);const o={},d="dev-contributors 2024-11-20",l={},c=[{value:"Summary",id:"summary",level:2},{value:"FAQ",id:"faq",level:2},{value:"Who Helped Who",id:"who-helped-who",level:2},{value:"Action Items",id:"action-items",level:2}];function a(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"dev-contributors-2024-11-20",children:"dev-contributors 2024-11-20"})}),"\n",(0,s.jsx)(i.h2,{id:"summary",children:"Summary"}),"\n",(0,s.jsxs)(i.p,{children:["In the Discord chat, Odilitime encountered an SqliteError due to a vector dimension mismatch between two vectors of different dimensions (384 vs 1536) while attempting to search memories by embedding in their system. Despite deleting the db.sqlite file and setting ",(0,s.jsx)(i.code,{children:"USE_OPENAI_EMBEDDING=TRUE"})," as per Loaf's suggestion, Odilitime still faced issues with undefined content errors when sending messages. The team decided to delete other caches located at core/cache and use the environment variable for OpenAI embeddings. Additionally, they discussed GitHub contributor roles, specifically mentioning @jin, @droyster, and @YOD\u023a26 as potential contributors. Odilitime also announced that version v0.1.3 of their project is working well."]}),"\n",(0,s.jsx)(i.h2,{id:"faq",children:"FAQ"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:"What is the error when sending a message due to vector dimension mismatch?"}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:"Odilitime: The error occurs because the first vector has 384 dimensions while the second one has 1536 dimensions, causing an SqliteError in the searchMemoriesByEmbedding function."}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:"Who is responsible for handling SQLite vectors and what could be a potential solution?"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Odilitime: The sqlite vector issue seems to be related to the MessageManager module within the client-discord package. Deleting db.sqlite file didn't resolve it, but setting USE_OPENAI_EMBEDDING=TRUE in the .env file might help."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:"What is causing the TypeError: Cannot read properties of undefined (reading 'content') error?"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Odilitime and loaf: The error occurs when trying to process actions at AgentRuntime or handle a message within MessageManager, possibly due to an issue with caching or database connections. Deleting caches and db.sqlite file might help resolve the problem."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:"How can you set up USE_OPENAI_EMBEDDING=TRUE in your environment?"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Odilitime: You need to add ",(0,s.jsx)(i.code,{children:"USE_OPENAI_EMBEDDING=TRUE"})," as a variable in your .env file, which is used for storing environment variables."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:"What are the locations of other caches that might be causing issues with SQLite vectors and TypeError?"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Odilitime: Other caches can be found within core/cache directory. Deleting these caches may help resolve the issue."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"who-helped-who",children:"Who Helped Who"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Loaf helped Odilitime with resolving a vector dimension mismatch error by suggesting to delete the db.sqlite file, which did not resolve the issue initially but led to further troubleshooting steps."}),"\n",(0,s.jsx)(i.li,{children:"Loaf assisted Odilitime in addressing an SQLite vector dimension mismatch and TypeError issues by recommending deletion of caches and using environment variables for OpenAI embeddings."}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"action-items",children:"Action Items"}),"\n",(0,s.jsx)(i.p,{children:"Technical Tasks:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Resolve SqliteError related to vector dimension mismatch issue (mentioned by Odilitime)","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Investigate the cause of the error and fix it, ensuring that both vectors have matching dimensions before processing them in ",(0,s.jsx)(i.code,{children:"searchMemoriesByEmbedding"})," function."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Fix TypeError when reading 'content' property from undefined object (mentioned by Odilitime)","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Debug the code to identify why an undefined object is being accessed for its 'content' property and implement a solution to prevent this error."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Delete db.sqlite file and recreate it with updated settings (suggested by loaf, agreed upon by Odilitime)","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Remove the existing ",(0,s.jsx)(i.code,{children:"db.sqlite"})," database file from the project directory and create a new one after setting up the environment variable for using OpenAI embeddings (",(0,s.jsx)(i.code,{children:"USE_OPENAI_EMBEDDING=TRUE"}),")."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Clear other caches (mentioned by loaf, questioned by Odilitime)","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Locate and delete any additional cache files that may be causing issues with the application. This includes clearing out the ",(0,s.jsx)(i.code,{children:"core/cache"})," directory mentioned by Odilitime."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Feature Requests:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Add GitHub contributor roles for @jin, @droyster, and @YOD\u023a26 (requested by Odilitime)","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Update the project's repository settings to grant specific permissions or access levels to these users as requested by Odilitime."}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},43023:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>d});var t=n(63696);const s={},r=t.createContext(s);function o(e){const i=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:i},e.children)}}}]);