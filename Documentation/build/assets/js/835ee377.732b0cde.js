"use strict";(self.webpackChunkeliza_docs=self.webpackChunkeliza_docs||[]).push([[17280],{76129:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"Discord/development/coders/chat_2024-11-09","title":"\ud83d\udcbb-coders 2024-11-09","description":"Summary","source":"@site/community/Discord/development/coders/chat_2024-11-09.md","sourceDirName":"Discord/development/coders","slug":"/Discord/development/coders/chat_2024-11-09","permalink":"/eliza/community/Discord/development/coders/chat_2024-11-09","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"\ud83d\udcbb-coders 2024-11-08","permalink":"/eliza/community/Discord/development/coders/chat_2024-11-08"},"next":{"title":"\ud83d\udcbb-coders 2024-11-10","permalink":"/eliza/community/Discord/development/coders/chat_2024-11-10"}}');var o=i(62540),t=i(43023);const r={},l="\ud83d\udcbb-coders 2024-11-09",c={},d=[{value:"Summary",id:"summary",level:2},{value:"FAQ",id:"faq",level:2},{value:"Who Helped Who",id:"who-helped-who",level:2},{value:"Action Items",id:"action-items",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"-coders-2024-11-09",children:"\ud83d\udcbb-coders 2024-11-09"})}),"\n",(0,o.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,o.jsx)(n.p,{children:"In the discussion, participants explored various technical solutions for tunneling, with Cloudflare Tunnel being recommended as a free option worth checking out. The official Telegram client's functionality was confirmed to work by Ophiuchus after resolving issues caused by including optional dependencies during installation. A pull request on GitHub introduced verbose logging configuration options for the Eliza project. Discussions also touched upon scraping configurations, with parameters like max tweets, retries, delays, and verbosity being considered. Additionally, Deniz brought up an issue regarding a discord client agent's interaction error in channels where it couldn't send messages. The conversation concluded with Trophy announcing plans to share resources based on the group's contributions."}),"\n",(0,o.jsx)(n.h2,{id:"faq",children:"FAQ"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Is the official Telegram client functioning properly?"}),"\n",(0,o.jsxs)(n.li,{children:["Ophiuchus: Yes, it works fine after installing with ",(0,o.jsx)(n.code,{children:"pnpm i"})," command and resolving an issue related to running ",(0,o.jsx)(n.code,{children:"pnpm install --include=optional sharp"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["How can one configure their bot to always respond to users on Twitter?","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Ophiuchus: You should use the ",(0,o.jsx)(n.code,{children:"thenShouldRespond()"})," method for the Telegram client, allowing you to change the prompt and make it always respond to users."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["What are some tips or configurations needed when setting up a TG bot key that doesn't answer back with anything?","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Ophiuchus: You might want to check your Botfather settings and ensure proper configuration for response behavior, such as using ",(0,o.jsx)(n.code,{children:"thenShouldRespond()"})," method in the Telegram client."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["How can one configure verbose logging for Eliza logger?","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["v1xingyue: Set ",(0,o.jsx)(n.code,{children:"elizaLogger.verbose"})," to true or false depending on your preference. The default value is false. You can also set it up using process.env variables and pass them as flags if needed."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"who-helped-who",children:"Who Helped Who"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Ophiuchus helped nirai kanai with installing the official Telegram client by providing the command ",(0,o.jsx)(n.code,{children:"pnpm i"})," for installation and suggesting to include optional dependencies like sharp. This resolved issues related to missing dependencies during installation."]}),"\n",(0,o.jsx)(n.li,{children:"V1xingyue helped shaw with configuring elizaLogger settings by showing how to set verbose mode in TypeScript code, which allows users to control logging verbosity."}),"\n",(0,o.jsx)(n.li,{children:"Trophy offered assistance to the group by proposing to send a friend request and share resources for further collaboration on their project."}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"action-items",children:"Action Items"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Technical Tasks"}),"\n",(0,o.jsxs)(n.li,{children:["Install the official Telegram client using ",(0,o.jsx)(n.code,{children:"pnpm i"})," and resolve issues with optional dependencies (mentioned by Ophiuchus)"]}),"\n",(0,o.jsxs)(n.li,{children:["Documentation Needs","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Update logger verbose configuration in GitHub repository (requested by v1xingyue)"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["Feature Requests","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Implement a setting to always respond to users in the Telegram client (suggested by Ophiuchus)"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["Community Tasks","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Share and discuss scraping configurations for Twitter scraper, including max tweets, retries, delays, etc. (led by shaw and v1xingyue)"}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},43023:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var s=i(63696);const o={},t=s.createContext(o);function r(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);